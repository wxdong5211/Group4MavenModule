apply plugin : 'java'
//apply plugin : 'war'//providedCompile need this plugin
//apply plugin: 'scala'// when use scala lang

buildscripts {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name 'jboss-snapshots'
            url 'https://repository.jboss.org/nexus/content/repositories/releases/'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
//        classpath 'org.sonarqube.gradle:gradle-sonarqube-plugin:1.0'
    }
}

//apply from : 'gradle/sonar.gradle' //need install buildscripts classpath
//apply from : 'gradle/application.gradle'
//apply from : 'gradle/provided.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8
group = 'com.impler.module'
version = '1.0'
buildDir = 'target'

//mainClassName = "AppMainFullName"

ext {
//    axis2Version = '1.6.2'
//    cxfVersion = '3.0.2'
//    axiomVersion = '1.2.14'
//    struts2Version = '2.3.16.3'
//    javassistVersion = '3.18.2-GA'
//    springVersion = '4.1.2.RELEASE'
//    springSecurityVersion = '3.2.5.RELEASE'
//    hibernateVersion = '4.3.7.Final'
}

//compileJava{
//    options.fork = true
//    options.forkOptions.executable = 'javac'
//    options.compilerArgs << '-XDignore.symbol.file'
//}

tasks.withType(AbstractCompile){
  if(it.hasProperty('options')){
    options?.encoding = "UTF-8"
  }
}

//task wrapper(type: Wrapper){
  //gradleVersion = project.gradleWrapperVersion
  //distributionUrl = 'http://proxy.com/your-gradle-zip-path.zip'
//}

task filter(type: Sync){
    from 'src/main/resources'
    into 'target/resources/main'
    outputs.upToDateWhen(false)
    filesMatching('modula.conf'){
        expand(project.properties)
//        filter(org.apache.tools.ant.filters.FixCrLfFilter)
//        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens : ['project.groupId':project.group])
    }
}

filter.mustRunAfter processResources
classes.dependsOn filter

task fatJar(type: Jar){
    baseName += '-all'
    from { configurations.compile.collect{ it.isDirectory() ? it : zipTree(it)} }
    with jar
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name 'jboss-snapshots'
        url 'https://repository.jboss.org/nexus/content/repositories/releases/'
    }
}

jar {
    manifest {
        attributes 'Created-By' : 'Gralde',
            'Build-Jdk' : System.getProperty('user.name'),
            'Built-By' : System.getProperty('java.version'),
            'Specification-Title' : project.name,
            'Specification-Version' : project.version,
            'Implementation-Title' : project.name,
            'Implementation-Version' : project.version,
            'Implementation-Vendor-Id' : project.group
    }
}

//javadoc{
//    options?.encoding = "UTF-8"
//    failOnError = false
//}


dependencies {
//    compile 'com.google.guava:guava:18.0'
//    providedCompile  'javax:javaee-api:7.0'
}

//apply from : 'gradle/akka.gradle'
//apply from : 'gradle/axis2.gradle'
//apply from : 'gradle/cxf.gradle'
//apply from : 'gradle/hibernate.gradle'
//apply from : 'gradle/javaeetomcat.gradle'
apply from : 'gradle/junit.gradle'
//apply from : 'gradle/mvnpush.gradle'
//apply from : 'gradle/mybatis.gradle'
//apply from : 'gradle/spring.gradle'
//apply from : 'gradle/springsecurity.gradle'
//apply from : 'gradle/struts2.gradle'

defaultTasks 'clean','build'
